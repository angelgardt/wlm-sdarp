# Логика {#logic}

{{< include other/_symbols.qmd >}}

```{r opts, echo=FALSE, eval=TRUE, message=FALSE, warning=FALSE, error=FALSE}
knitr::opts_chunk$set(echo=TRUE, eval=TRUE, message=FALSE, warning=FALSE, error=FALSE)
```

:::{.intro}
Вступление
:::

## Логика как наука {#logic-as-science}

:::{.lab-senior}
:::

:::{#def-logic}
**Формальна логика** --- наука об общих структурах правильного мышления в его языковой форме [@segeth1985, с. 19].
:::

## Высказывания {#logic-propositions}

:::{.lab-senior}
:::

Мы будем иметь дело только с **логикой высказываний**, которая занимается --- не поверите --- высказываниями. Неплохо было бы понять, что это такое.


### Атомарные высказывания {#logic-propositions-atomic}

:::{.lab-senior}
:::

![Графическое представление высказывания](img/math-logic/proposition.jpg){#fig-proposition}

### Операции с высказываниями {#logic-propositions-operations}

:::{.lab-senior}
:::

#### Отрицание {#logic-propositions-operations-neg}

:::{#def-negation}
**Отрицание (negation)** --- операция, посредством которого из исходного высказывания получают новое с противоположным значением истинности.

Обозначение: $\neg$
:::

![Графическое представление отрицания](img/math-logic/negation.jpg){#fig-negation}

:::{#tbl-negation}

|$p$|$\neg p$|
|:---:|:---:|
|$\true$|$\false$|
|$\false$|$\true$|

Таблица истинности отрицания
:::



#### Конъюнкция {#logic-propositions-and}

:::{#def-conjunction}
**Конъюнкция (conjunction)** --- сложное высказывание, которое истинно тогда и только тогда, когда истинны оба входящие в него атомарные высказывания.

Обозначение: $\and$
:::

![Графическое представление конъюнкции](img/math-logic/conjunction.jpg){#fig-conjunction}

:::{#tbl-conjunction}

|$p$|$q$|$p \and q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\false$|
|$\false$|$\false$|$\false$|

Таблица истинности конъюнкции
:::



#### Дизъюнкция {#logic-propositions-operations-or}

:::{#def-disjunction}
**Дизъюнкция (disjunction)** --- сложное высказывание, которое истинно тогда и только тогда, когда истинно хотя бы одно входящее в него атомарное высказывание.

Обозначение: $\or$
:::

![Графическое представление дизъюнкции](img/math-logic/disjunction.jpg){#fig-disjunction}

:::{#tbl-disjunction}

|$p$|$q$|$p \or q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\true$|
|$\false$|$\true$|$\true$|
|$\false$|$\false$|$\false$|

Таблица истинности дизъюнкции
:::



#### Разделительная дизъюнкция {#logic-propositions-operations-xor}

:::{#def-xor}
**Разделительная дизъюнкция (exclusive disjunction)** --- сложное высказывание, которое истинно тогда и только тогда, когда истинно хотя бы одно входящее в него атомарное высказывание.

Обозначение: $\or$
:::

![Графическое представление разделительной конъюнкции](img/math-logic/xor.jpg){#fig-xor}

:::{#tbl-xor}

|$p$|$q$|$p \xor q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\false$|
|$\true$|$\false$|$\true$|
|$\false$|$\true$|$\true$|
|$\false$|$\false$|$\false$|

Таблица истинности разделительной дизъюнкции
:::


### Условные высказывания {#logic-propositions-conditional}

:::{.lab-senior}
:::

#### Импликация {#logic-propositions-conditional-impl}

:::{#def-implication}
**Импликация (implication)** --- сложное высказывание, которое ложно тогда и только тогда, когда его антецедент истинен, а консеквент ложен.

Обозначение: $\impl$
:::

![Графическое представление импликации](img/math-logic/implication.jpg){#fig-implication}

:::{#tbl-implication}

|$p$|$q$|$p \impl q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\true$|
|$\false$|$\false$|$\true$|

Таблица истинности импликации
:::


#### Репликация {#logic-propositions-conditional-repl}

:::{#def-implication}
**Репликация (converse)** --- сложное высказывание, которое ложно тогда и только тогда, когда его антецедент ложен, а консеквент истинен.

Обозначение: $\repl$
:::

![Графическое представление репликации](img/math-logic/replication.jpg){#fig-replication}

:::{#tbl-replication}

|$p$|$q$|$p \repl q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\true$|
|$\false$|$\true$|$\false$|
|$\false$|$\false$|$\true$|

Таблица истинности репликации
:::


#### Эквиваленция {#logic-propositions-conditional-equi}

:::{#def-equivalence}
**Эквиваленция (equivalence)** --- сложное высказывание, которое истинно тогда и только тогда, когда его антецедент и консеквент имеют одинаковые значения истинности.

Обозначение: $\equi$
:::

![Графическое представление эквиваленции](img/math-logic/equivalence.jpg){#fig-equivalence}

:::{#tbl-equivalence}

|$p$|$q$|$p \equi q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\false$|
|$\false$|$\false$|$\true$|

Таблица истинности эквиваленции
:::

Нетрудно заметить, что эквиваленция представляет собой конъюнкцию импликации и репликации.

:::{#exr-equi-as-conj}
Проверьте, построив таблицу истинности, что значения истинности высказывания $(p \impl q) \and (p \repl q)$ совпадают со значениями истинности высказывания $p \equi q$ при всех комбинациях значений истинности $p$ и $q$.
:::

::::{.solution}
:::{.cell}
|$p$|$q$|$p \impl q$|$p \repl q$|$(p \impl q) \and (p \repl q)$|$p \equi q$|
|:---:|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\true$|$\false$|$\false$|$\false$|
|$\false$|$\false$|$\true$|$\true$|$\true$|$\true$|
:::
::::



## Умозаключения {#logic-consequence}

:::{.lab-senior}
:::

:::{#def-consequence}
**Логическое умозаключение (consequence)** состоит в том, что из одного или нескольких данных высказываний (*посылок*), применяя к ним правила умозаключения, получают новое высказывание (*заключение*).
:::

### Правила умозаключений {#logic-consequence-rules}

:::{.lab-senior}
:::

#### Законы де Моргана {#logic-consequence-rules-demorgan}

::::{.columns}
:::{.column}
$$
\begin{split}
\neg (p \and q) \\
\hline
\neg p \or \neg q
\end{split}
$${#eq-demorgan-negand}
:::
:::{.column}
$$
\begin{split}
\neg (p \or q) \\
\hline
\neg p \and \neg q
\end{split}
$${#eq-demorgan-negor}
:::
::::

#### Modus ponens и Modus tollens {#logic-consequence-rules-modus}

Modus ponens ([-@eq-modus-ponens]) и Modus tollens ([-@eq-modus-tollens])

::::{.columns}
:::{.column}
$$
\begin{split}
p \impl q \\
p \\
\hline
q
\end{split}
$${#eq-modus-ponens}
:::
:::{.column}
$$
\begin{split}
p \impl q \\
\neg q \\
\hline
\neg p
\end{split}
$${#eq-modus-tollens}
:::
::::


### Логические ошибки в умозаключениях {#logic-consequence-errors}

:::{.lab-senior}
:::

$$
\begin{split}
p \impl q \\
q \\
\hline
p
\end{split}
$${#eq-affirm-conseq}

:::{#tbl-affirm-conseq}

|$p$|$q$|$p \impl q$|$(p \impl q) \and q$|$\big( (p \impl q) \and q \big) \impl p$|
|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|$\false$|$\true$|
|$\false$|$\true$|$\true$|$\true$|$\false$|
|$\false$|$\false$|$\true$|$\false$|$\true$|

Проверка правила [-@eq-affirm-conseq]
:::

$$
\begin{split}
p \impl q \\
\neg p \\
\hline
\neg q
\end{split}
$${#eq-neg-antec}

:::{#tbl-affirm-conseq}

|$p$|$q$|$\neg p$|$\neg q$|$p \impl q$|$(p \impl q) \and \neg p$|$\big( (p \impl q) \and \neg p \big) \impl \neg q$|
|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\false$|$\false$|$\true$|$\false$|$\true$|
|$\true$|$\false$|$\false$|$\true$|$\false$|$\true$|$\true$|
|$\false$|$\true$|$\true$|$\false$|$\true$|$\true$|$\false$|
|$\false$|$\false$|$\true$|$\true$|$\true$|$\true$|$\true$|

Проверка правила [-@eq-neg-antec]
:::


:::{#exr-stat-inf-logic}
Пусть даны атомарные высказывания $(p < \alpha)$, $H_1$ и $H_0$. Третье таково, что $H_0 \equi \neg H_1$, а первые два связаны следующим образом: $(p < \alpha) \impl H_1$.

Предлагается следующее правило для умозаключения:

$$
\begin{split}
(p < \alpha) \impl H_1 \\
(p \geq \alpha) \\
\hline
H_0
\end{split}
$$

Проверьте, можно ли пользоваться этим правилом при умозаключениях.
:::

::::{.solution}
:::{.cell}
Для того, чтобы проверить, можно ли пользоваться предложенным правилом для умозаключения, необходимо выяснить, всегда ли заключение --- в данном случае $H_0$ --- будет истинно, если истинны обе посылки --- в данном случае $(p < \alpha) \impl H_1$ и $(p \geq \alpha)$.

Построим следующую таблицу истинности:

|$p < \alpha$|$H_1$|$(p < \alpha) \impl H_1$|$(p \geq \alpha)$|$\big( (p < \alpha) \impl H_1 \big) \and (p \geq \alpha)$|$H_0$|
|:---:|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|$\false$|$\false$|$\false$|
|$\true$|$\false$|$\false$|$\false$|$\false$|$\true$|
|$\false$|$\true$|$\true$|$\true$|$\true$|$\false$|
|$\false$|$\false$|$\true$|$\true$|$\true$|$\true$|

Обратим внимание на две последние строчки получившейся таблицы: обе посылки в обоих случая истинны, однако заключение истинно только в одном из случаев. Значит такое правило для умозаключение применять нельзя --- оно не гарантирует истинность заключения при истинности обеих посылок.
:::
::::




```{=html}
<script type="text/javascript" src="./js/chapter.js"></script>
```
