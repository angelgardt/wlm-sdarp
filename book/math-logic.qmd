# Логика {#math-logic}

{{< include other/_symbols.qmd >}}

```{r opts, echo=FALSE, eval=TRUE, message=FALSE, warning=FALSE, error=FALSE}
knitr::opts_chunk$set(echo=TRUE, eval=TRUE, message=FALSE, warning=FALSE, error=FALSE)
```

:::{.intro}
Полагаю, никто не будет спорить с тем, что логика лежит в основе всего. Ладно, сильное утверждение. Как минимум, логика лежит в основе работы компьютеров и алгоритмов, которыми мы с вами пользуемся. Однако нас как практиков технические детали воплощения методов подбора параметров статистических моделей. Зачем же нам тогда логика?

Пожалуй, отмечу две наиболее важные, на мой взгляд, вещи для нас как исследователей: логические концепции лежат в основе (1) статистического вывода --- ключевой части статистического анализа --- и (2) научного познания в смысле подтверждения или опровержения гипотез и теорий. В силу этого, стоит познакомиться с аппаратом логики, чтобы увереннее ориентироваться в том, чем мы занимаемся. Кроме того, мы будем использовать логические обозначения, разбираясь с математикой и теорией вероятности.

Можно ли обойтись без этого? В целом --- да.

:::





## Логика как наука {#math-logic-as-science}

:::{.lab-senior}
:::

:::{#def-logic}
**Формальна логика** --- наука об общих структурах правильного мышления в его языковой форме [@segeth1985, с. 19].
:::



## Высказывания {#math-logic-propositions}

:::{.lab-senior}
:::

Мы будем иметь дело только с **логикой высказываний**, которая занимается --- не поверите --- высказываниями. Неплохо было бы понять, что это такое.

Здесь, правда, возникает следующая проблема: высказывание, являясь фундаментальным понятие логики высказываний, неопределимо средствами самой этой науки. Впрочем, это не является чем-то специфичным для логики. Такое положение дел свойственно фундаментальным понятиям в любой науке. Тем не менее, можно предложить следующее определение.

:::{#def-proposition}
**Высказывание (proposition)** --- мысленное отражение объективной связи между предметами [@segeth1985, с. 42].
:::

Мы не будем здесь глубоко погружаться в философский диспут о том, что есть объективное и как его определить, а ограничимся следующими соображениями [@segeth1985, с. 40]: будем говорить об объективной связи между предметами, если

* определённым объектам присущи определённые признаки,
* определённым признакам свойственным определенные признаки.

:::{.quote .small .pers}
--- Очень точно, очень понятно... Может примеров каких накинешь?
:::

Высказывания обычно формулируются как повествовательные предложения. Например, фраза «страницы этой книги синего цвета» является высказыванием, так же как и фраза «всё существует в пространстве и во времени». Опустим рассуждения о роли языка в формулировании высказываний --- которая, безусловно, очень велика --- поскольку для наших задач она не слишком существенна.

Высказывания могут быть **истинными** и **ложными**. Мы будем говорить, что 

* **высказывание истинно**, если оно адекватно отражает объективную связь между предметами
* и **высказывание ложно**, если оно неадекватно отражает объективную связь между предметами.

Так, упомянутое выше высказывание «*страницы этой книги синего цвета*» является *ложным*, так как не соответствует объективному положению дел --- страницы книги либо белые, либо тёмно-серые в зависимости от используемой вами темы оформления. Высказывание «*эта книга опубликована в Интернете*» является *истинным*, поскольку соответствует объективной реальности.

:::{.quote .small .pers}
--- А бывает что-то кроме *истины* и *лжи*?<br>
--- Бывает, но во многозначных логиках. Мы такие рассматривать не будем.
:::

Мы будем иметь дело с **двузначной логикой**, в которой любое высказывание должно быть либо истинным, либо ложным. Третьего варианта быть не может.


### Пропозициональные переменные {#math-logic-propositional-vars}

:::{.lab-senior}
:::

Логика на то и формальная, чтобы абстрагироваться от содержания высказываний. И он так делает --- её не интересует, что именно было сказано. Важно лишь то, какое **значение истинности** --- `истина` (`true`, $\true$) или `ложь` (`false`, $\false$) --- имело определенное высказывание. Это позволяет сосредоточиться на анализе *формы* высказываний, чем формальная логика и занимается.

В этой связи оказывается удобно обозначать высказывания **пропозициональными переменными**. Если нас интересует только значение истинности высказывания, то пусть некоторое высказывание будет обозначено как $p$. Тогда эта пропозициональная переменная может принимать одно из двух значений --- либо `истина` (`true`, $\true$), либо `ложь` (`false`, $\false$). Такая формализация позволяет строить и анализировать сложные конструкции из высказываний, что мы увидим далее.


### Атомарные высказывания {#math-logic-propositions-atomic}

:::{.lab-senior}
:::

Среди всех высказываний можно выделить категорию таких, которые невозможно разложить на части. Такие высказывания называются **атомарными** (от др.-греч. ἄτομος --- «неделимый», «неразрезаемый»). Это такие высказывания, которые могут быть только *целиком* либо истинными, либо ложными.

Например, всё то же высказывание «*страницы этой книги синего цвета*» является *атомарным*, ибо ни на какие более мелкие части его поделить невозможно. А вот высказывание «*я собрал данные и могу их анализировать*» является *сложным*, так как в нём выделяется две составляющие --- два атомарных высказывания: «*я собрал данные*» и «*я могу анализировать данные*». При этом обе части могут быть как истинны, так и ложны, причем независимо друг от друга. Вопрос, конечно, в том, истинно ли истинно всё высказывание в целом в зависимости от значений истинности его частей. Однако эти вопросом мы займемся позднее.

Чаще всего именно атомарные высказывания обозначаются пропозициональными переменными. Так, если мы обозначим «*я собрал данные*» за $p$, а «*я могу анализировать данные*» --- за $q$, тогда всё высказывание «*я собрал данные и могу их анализировать*» можно формально записать как «$p$ и $q$». Хотя это и не строгая формальная запись, она отражает идею формализации высказываний.

Кроме того, для наглядности оказывается удобно отображать высказывания на схемах. Самой простой является схема одного высказывания, представленная на рисунке [-@fig-proposition].

![Графическое представление высказывания](img/math-logic/proposition.jpg){#fig-proposition}

:::{.quote .small .pers}
--- Я правильно понимаю, что цветом внутри круга обозначено нечто, где высказывание истинно, а всё остальное серое --- это там, где высказывание ложно?<br>
--- Да, абсолютно так!
:::



### Операции с высказываниями {#math-logic-propositions-operations}

:::{.lab-senior}
:::

С высказываниями можно выполнять различные операции. К базовым логическим операциям относят отрицание, конъюнкцию и дизъюнкцию. Две последних позволяют строить *сложные высказывания*. Разберёмся, кто это такие.


#### Отрицание {#math-logic-propositions-operations-neg}

:::{#def-negation}
**Отрицание (negation)** --- операция, посредством которого из исходного высказывания получают новое с противоположным значением истинности.

Обозначение: $\neg$
:::

Это одна из самых простых операций. Она всего лишь меняет `true` на `false`, и наоборот. Для всех операций можно построить **таблицы истинности**, которые покажут, какое значение истинности будет у высказывания после применения той или иной операции в зависимости от исходного значения истинности высказывания. Для отрицания таблица истинности состоит всего из двух строк (@tbl-negation), а графическое представление отрицания тоже довольно интуитивно (@fig-negation).

:::{#tbl-negation}

|$p$|$\neg p$|
|:---:|:---:|
|$\true$|$\false$|
|$\false$|$\true$|

Таблица истинности отрицания
:::

![Графическое представление отрицания](img/math-logic/negation.jpg){#fig-negation}

С формальной точки зрения операция отрицания предельно проста. Но не всё так просто, если мы будем иметь дело с естественным языком. Отрицание применяется *ко всему высказыванию сразу*, но не к отдельным его частям или отдельным словам. Так, если мы снова вернёмся к цвету страниц данной книги и попробуем сделать отрицание высказывания, получим следующее:

* $p$: страницы этой книги не синего цвета [$\false$]
* $\neg p$: страницы этой книги *не синего* цвета [$\true$]

Применив операцию отрицания, мы получили из ложного высказывания истинное, и вроде бы всё верно. Однако формально отрицание построено некорректно. Аналогичным способом можно было бы сделать так:

* $p$: страницы этой книги не синего цвета [$\false$]
* $\neg p$: страницы *не этой* книги не синего цвета [$\true$]

Снова мы из ложного высказывания получили истинное, применив операцию отрицания. Мы получили из одного ложного высказывания с помощью отрицания два разных по содержанию истинных высказывания. Но мы хотели абстрагироваться от содержания. Как же быть?

Необходимо отрицать *всё высказывание сразу*. Мы же отрицали отдельные слова. Можно это оформить так:

* $p$: страницы этой книги не синего цвета [$\false$]
* $\neg p$: *неверно, что* страницы этой книги не синего цвета [$\true$]

В таком случае противоречий не возникает.



#### Конъюнкция {#math-logic-propositions-and}

:::{#def-conjunction}
**Конъюнкция (conjunction)** --- сложное высказывание, которое истинно тогда и только тогда, когда истинны оба входящие в него атомарные высказывания.

Обозначение: $\and$
:::

Исходя из определения, можно построить таблицу истинности конъюнкции (@tbl-conjunction), хотя схема здесь кажется более наглядной (@fig-conjunction).

![Графическое представление конъюнкции](img/math-logic/conjunction.jpg){#fig-conjunction}

:::{#tbl-conjunction}

|$p$|$q$|$p \and q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\false$|
|$\false$|$\false$|$\false$|

Таблица истинности конъюнкции
:::

Конъюнкцию иначе называют «логическим И», хотя союз «и» может использоваться в естественном языке не только в таком значении. Более точно его можно было бы назвать «логическим И …, И…», так как конъюнктивное высказывание из $p$ и $q$ будет истинным только тогда, когда **и** $p$, **и** $q$ будут истинны. Ещё одно название конъюнкции --- «логическое умножение», потому что если мы обозначим[^alglogic] «истину» как $1$, а ложь --- как $0$, то получим такое соответствие (ср. таблицы [-@tbl-conjunction] и [-@tbl-conjunction-prod]):

[^alglogic]: Такой подход характерен для *алгебры логики*.

:::{#tbl-conjunction-prod}

|$p$|$q$|$p \times q$|
|:---:|:---:|:---:|
|$1$|$1$|$1$|
|$1$|$0$|$0$|
|$0$|$1$|$0$|
|$0$|$0$|$0$|

Логическое умножение
:::


#### Дизъюнкция {#math-logic-propositions-operations-or}

:::{#def-disjunction}
**Дизъюнкция (disjunction)** --- сложное высказывание, которое истинно тогда и только тогда, когда истинно хотя бы одно входящее в него атомарное высказывание.

Обозначение: $\or$
:::

Исходя из определения, можно снова построить таблицу истинности конъюнкции (@tbl-disjunction), хотя схема здесь вновь кажется более наглядной (@fig-disjunction).

![Графическое представление дизъюнкции](img/math-logic/disjunction.jpg){#fig-disjunction}

:::{#tbl-disjunction}

|$p$|$q$|$p \or q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\true$|
|$\false$|$\true$|$\true$|
|$\false$|$\false$|$\false$|

Таблица истинности дизъюнкции
:::

Дизъюнкцию иначе называют «логическим ИЛИ», хотя и этот союз может использоваться в естественном языке в разных значения. Если строить дизъюнкцию из $p$ и $q$, то она будет выглядеть на естественном языке так: **или** $p$, **или** $q$, *или и то, и другое*. Это довольно громоздко, поэтому и проще записать без потери однозначности $p \or q$. Ещё одно название дизъюнкции --- «логическое сложение», потому что если «истина» --- это $1$, а ложь --- это $0$, то получается следующее соответствие (ср. таблицы [-@tbl-disjunction] и [-@tbl-disjunction-sum]):

:::{#tbl-disjunction-sum}

|$p$|$q$|$p + q$|
|:---:|:---:|:---:|
|$1$|$1$|$1$|
|$1$|$0$|$1$|
|$0$|$1$|$1$|
|$0$|$0$|$0$|

Логическое сложение
:::



#### Разделительная дизъюнкция {#math-logic-propositions-operations-xor}

:::{#def-xor}
**Разделительная дизъюнкция (exclusive disjunction)** --- сложное высказывание, которое истинно тогда и только тогда, когда истинно хотя бы одно входящее в него атомарное высказывание.

Обозначение: $\or$
:::

![Графическое представление разделительной конъюнкции](img/math-logic/xor.jpg){#fig-xor}

:::{#tbl-xor}

|$p$|$q$|$p \xor q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\false$|
|$\true$|$\false$|$\true$|
|$\false$|$\true$|$\true$|
|$\false$|$\false$|$\false$|

Таблица истинности разделительной дизъюнкции
:::


#### Другие операции {#math-logic-propositions-operations-other}

alternative denial
joint denial



### Условные высказывания {#math-logic-propositions-conditional}

:::{.lab-senior}
:::

#### Импликация {#math-logic-propositions-conditional-impl}

:::{#def-implication}
**Импликация (implication)** --- сложное высказывание, которое ложно тогда и только тогда, когда его антецедент истинен, а консеквент ложен.

Обозначение: $\impl$
:::

![Графическое представление импликации](img/math-logic/implication.jpg){#fig-implication}

:::{#tbl-implication}

|$p$|$q$|$p \impl q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\true$|
|$\false$|$\false$|$\true$|

Таблица истинности импликации
:::


#### Репликация {#math-logic-propositions-conditional-repl}

:::{#def-implication}
**Репликация (converse)** --- сложное высказывание, которое ложно тогда и только тогда, когда его антецедент ложен, а консеквент истинен.

Обозначение: $\repl$
:::

![Графическое представление репликации](img/math-logic/replication.jpg){#fig-replication}

:::{#tbl-replication}

|$p$|$q$|$p \repl q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\true$|
|$\false$|$\true$|$\false$|
|$\false$|$\false$|$\true$|

Таблица истинности репликации
:::


#### Эквиваленция {#math-logic-propositions-conditional-equi}

:::{#def-equivalence}
**Эквиваленция (equivalence)** --- сложное высказывание, которое истинно тогда и только тогда, когда его антецедент и консеквент имеют одинаковые значения истинности.

Обозначение: $\equi$
:::

![Графическое представление эквиваленции](img/math-logic/equivalence.jpg){#fig-equivalence}

:::{#tbl-equivalence}

|$p$|$q$|$p \equi q$|
|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\false$|
|$\false$|$\false$|$\true$|

Таблица истинности эквиваленции
:::

Нетрудно заметить, что эквиваленция представляет собой конъюнкцию импликации и репликации.

:::{#exr-equi-as-conj}
Проверьте, построив таблицу истинности, что значения истинности высказывания $(p \impl q) \and (p \repl q)$ совпадают со значениями истинности высказывания $p \equi q$ при всех комбинациях значений истинности $p$ и $q$.
:::

::::{.solution}
:::{.cell}
|$p$|$q$|$p \impl q$|$p \repl q$|$(p \impl q) \and (p \repl q)$|$p \equi q$|
|:---:|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|$\true$|$\false$|$\false$|
|$\false$|$\true$|$\true$|$\false$|$\false$|$\false$|
|$\false$|$\false$|$\true$|$\true$|$\true$|$\true$|
:::
::::


## Тавтологии и противоречия {#math-logic-propositions-laws}

:::{#def-tautology}
**Тавтологией, или логическим законом, (tautology, logical law)** называется сложное высказывание, которое всегда истинно, независимо от значений истинности высказываний, входящих в его состав.

Обозначение: $\top$
:::

:::{#def-tautology}
**Противоречием (contradiction)** называется сложное высказывание, которое всегда ложно, независимо от значений истинности высказываний, входящих в его состав.

Обозначение: $\bot$
:::


### Законы Аристотелевской логики {#math-logic-aristotle}

:::{#prp-law1}
**(Закон тождества)**

$$
p \Rightarrow p
$$
:::

:::{#prp-law2}
**(Закон противоречия)**

$$
\neg(p \and \neg p)
$$
:::

:::{#prp-law3}
**(Закон исключенного третьего)**

$$
p \or \neg p
$$
:::


:::{#exr-aristotle}
Покажите с использованием таблиц истинности, что законы логики Аристотеля (утверждения [-@prp-law1], [-@prp-law2], [-@prp-law3]) действительно являются логическими законами.
:::

:::{#exr-double-negation}
**Закон двойного отрицания** гласит, что два отрицания, стоящие рядом [внутри высказывания или перед ним], взаимно уничтожают друг друга.

1. Запишите этот закон с использованием логических операций и пропозициональных переменных.
1. Покажите с использованием таблиц истинности, что получившееся высказывание действительно является логическим законом.
:::

::::{.solution}
:::{.cell}
1. $\neg(\neg p) \Leftrightarrow p$
1. Построим таблицу истинности:

|$p$|$\neg p$|$\neg(\neg p)$|$\neg(\neg p) \Leftrightarrow p$|
|:---:|:---:|:---:|:---:|
|$\true$|$\false$|$\true$|$\true$|
|$\false$|$\true$|$\false$|$\true$|

Сформулированное высказывание является логическим законом, поскольку истинно при любых значениях истинности $p$. Кроме того, так как полученная эквиваленция общезначима, выражения $p$ и $\neg(\neg p)$ семантически эквивалентны (равносильны).
:::
::::


## Свойства логических операций {#math-logic-props}

### Свойства конъюнкции {#math-logic-props-and}

:::{#prp-and-commutative}
$$
p \and q \equi q \and p
$$
:::

### Свойства дизъюнкции {#math-logic-props-or}

:::{#prp-or-commutative}
$$
p \and q \equi q \and p
$$
:::

## Умозаключения {#math-logic-consequence}

:::{.lab-senior}
:::

:::{#def-consequence}
**Логическое умозаключение (consequence)** состоит в том, что из одного или нескольких данных высказываний (*посылок*), применяя к ним правила умозаключения, получают новое высказывание (*заключение*).
:::

### Правила умозаключений {#math-logic-consequence-rules}

:::{.lab-senior}
:::

#### Законы де Моргана {#math-logic-consequence-rules-demorgan}

::::{.columns}
:::{.column}
$$
\begin{split}
\neg (p \and q) \\
\hline
\neg p \or \neg q
\end{split}
$${#eq-demorgan-negand}
:::
:::{.column}
$$
\begin{split}
\neg (p \or q) \\
\hline
\neg p \and \neg q
\end{split}
$${#eq-demorgan-negor}
:::
::::

#### Modus ponens и Modus tollens {#math-logic-consequence-rules-modus}

Modus ponens ([-@eq-modus-ponens]) и Modus tollens ([-@eq-modus-tollens])

::::{.columns}
:::{.column}
$$
\begin{split}
p \impl q \\
p \\
\hline
q
\end{split}
$${#eq-modus-ponens}
:::
:::{.column}
$$
\begin{split}
p \impl q \\
\neg q \\
\hline
\neg p
\end{split}
$${#eq-modus-tollens}
:::
::::


### Логические ошибки в умозаключениях {#math-logic-consequence-errors}

:::{.lab-senior}
:::

$$
\begin{split}
p \impl q \\
q \\
\hline
p
\end{split}
$${#eq-affirm-conseq}

:::{#tbl-affirm-conseq}

|$p$|$q$|$p \impl q$|$(p \impl q) \and q$|$\big( (p \impl q) \and q \big) \impl p$|
|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|$\true$|$\true$|
|$\true$|$\false$|$\false$|$\false$|$\true$|
|$\false$|$\true$|$\true$|$\true$|$\false$|
|$\false$|$\false$|$\true$|$\false$|$\true$|

Проверка правила [-@eq-affirm-conseq]
:::

$$
\begin{split}
p \impl q \\
\neg p \\
\hline
\neg q
\end{split}
$${#eq-neg-antec}

:::{#tbl-affirm-conseq}

|$p$|$q$|$\neg p$|$\neg q$|$p \impl q$|$(p \impl q) \and \neg p$|$\big( (p \impl q) \and \neg p \big) \impl \neg q$|
|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\false$|$\false$|$\true$|$\false$|$\true$|
|$\true$|$\false$|$\false$|$\true$|$\false$|$\true$|$\true$|
|$\false$|$\true$|$\true$|$\false$|$\true$|$\true$|$\false$|
|$\false$|$\false$|$\true$|$\true$|$\true$|$\true$|$\true$|

Проверка правила [-@eq-neg-antec]
:::


:::{#exr-stat-inf-logic}
Пусть даны атомарные высказывания $(p < \alpha)$, $H_1$ и $H_0$. Третье таково, что $H_0 \equi \neg H_1$, а первые два связаны следующим образом: $(p < \alpha) \impl H_1$.

Предлагается следующее правило для умозаключения:

$$
\begin{split}
(p < \alpha) \impl H_1 \\
(p \geq \alpha) \\
\hline
H_0
\end{split}
$$

Проверьте, можно ли пользоваться этим правилом при умозаключениях.
:::

::::{.solution}
:::{.cell}
Для того, чтобы проверить, можно ли пользоваться предложенным правилом для умозаключения, необходимо выяснить, всегда ли заключение --- в данном случае $H_0$ --- будет истинно, если истинны обе посылки --- в данном случае $(p < \alpha) \impl H_1$ и $(p \geq \alpha)$.

Построим следующую таблицу истинности:

|$p < \alpha$|$H_1$|$(p < \alpha) \impl H_1$|$(p \geq \alpha)$|$\big( (p < \alpha) \impl H_1 \big) \and (p \geq \alpha)$|$H_0$|
|:---:|:---:|:---:|:---:|:---:|:---:|
|$\true$|$\true$|$\true$|$\false$|$\false$|$\false$|
|$\true$|$\false$|$\false$|$\false$|$\false$|$\true$|
|$\false$|$\true$|$\true$|$\true$|$\true$|$\false$|
|$\false$|$\false$|$\true$|$\true$|$\true$|$\true$|

Обратим внимание на две последние строчки получившейся таблицы: обе посылки в обоих случая истинны, однако заключение истинно только в одном из случаев. Значит такое правило для умозаключение применять нельзя --- оно не гарантирует истинность заключения при истинности обеих посылок.
:::
::::




```{=html}
<script type="text/javascript" src="./js/chapter.js"></script>
```
